{"ast":null,"code":"export function validate(userData) {\n  const errors = {};\n\n  // Validación del email\n  if (!userData.email) {\n    errors.email = 'El email es requerido';\n  } else if (!isValidEmail(userData.email)) {\n    errors.email = 'El email no es válido';\n  } else if (userData.email.length > 35) {\n    errors.email = 'El email no puede tener más de 35 caracteres';\n  }\n\n  // Validación de la contraseña\n  if (!userData.password) {\n    errors.password = 'La contraseña es requerida';\n  } else if (!isValidPassword(userData.password)) {\n    errors.password = 'La contraseña no es válida';\n  }\n  return errors;\n}\nfunction isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\nfunction isValidPassword(password) {\n  const passwordRegex = /^(?=.*\\d).{6,10}$/;\n  return passwordRegex.test(password);\n}","map":{"version":3,"names":["validate","userData","errors","email","isValidEmail","length","password","isValidPassword","emailRegex","test","passwordRegex"],"sources":["C:/Users/Facu/Henry Modulos/FT-M2-master/rick_and_morty/Client/src/validation.js"],"sourcesContent":["export function validate(userData) {\r\n    const errors = {};\r\n  \r\n    // Validación del email\r\n    if (!userData.email) {\r\n      errors.email = 'El email es requerido';\r\n    } else if (!isValidEmail(userData.email)) {\r\n      errors.email = 'El email no es válido';\r\n    } else if (userData.email.length > 35) {\r\n      errors.email = 'El email no puede tener más de 35 caracteres';\r\n    }\r\n  \r\n    // Validación de la contraseña\r\n    if (!userData.password) {\r\n      errors.password = 'La contraseña es requerida';\r\n    } else if (!isValidPassword(userData.password)) {\r\n      errors.password = 'La contraseña no es válida';\r\n    }\r\n  \r\n    return errors;\r\n  }\r\n  \r\n  function isValidEmail(email) {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  }\r\n  \r\n  function isValidPassword(password) {\r\n    const passwordRegex = /^(?=.*\\d).{6,10}$/;\r\n    return passwordRegex.test(password);\r\n  }\r\n  "],"mappings":"AAAA,OAAO,SAASA,QAAQA,CAACC,QAAQ,EAAE;EAC/B,MAAMC,MAAM,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;IACnBD,MAAM,CAACC,KAAK,GAAG,uBAAuB;EACxC,CAAC,MAAM,IAAI,CAACC,YAAY,CAACH,QAAQ,CAACE,KAAK,CAAC,EAAE;IACxCD,MAAM,CAACC,KAAK,GAAG,uBAAuB;EACxC,CAAC,MAAM,IAAIF,QAAQ,CAACE,KAAK,CAACE,MAAM,GAAG,EAAE,EAAE;IACrCH,MAAM,CAACC,KAAK,GAAG,8CAA8C;EAC/D;;EAEA;EACA,IAAI,CAACF,QAAQ,CAACK,QAAQ,EAAE;IACtBJ,MAAM,CAACI,QAAQ,GAAG,4BAA4B;EAChD,CAAC,MAAM,IAAI,CAACC,eAAe,CAACN,QAAQ,CAACK,QAAQ,CAAC,EAAE;IAC9CJ,MAAM,CAACI,QAAQ,GAAG,4BAA4B;EAChD;EAEA,OAAOJ,MAAM;AACf;AAEA,SAASE,YAAYA,CAACD,KAAK,EAAE;EAC3B,MAAMK,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACN,KAAK,CAAC;AAC/B;AAEA,SAASI,eAAeA,CAACD,QAAQ,EAAE;EACjC,MAAMI,aAAa,GAAG,mBAAmB;EACzC,OAAOA,aAAa,CAACD,IAAI,CAACH,QAAQ,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}